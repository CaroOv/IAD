#! /Applications/Nuke10.5v1/Nuke10.5v1.app/Contents/MacOS/libnuke-10.5.1.dylib -nx
version 10.5 v1
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="0" y="22" w="1680" h="1024" screen="0">
        <splitter orientation="1">
            <split size="40"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="1017" stretch="1"/>
            <splitter orientation="2">
                <split size="586"/>
                <dock id="" activePageId="Viewer.1" focus="true">
                    <page id="Viewer.1"/>
                    <page id="Viewer.1"/>
                </dock>
                <split size="412"/>
                <dock id="" activePageId="DAG.1">
                    <page id="DAG.1"/>
                    <page id="Curve Editor.1"/>
                    <page id="DopeSheet.1"/>
                </dock>
            </splitter>
            <split size="615"/>
            <splitter orientation="2">
                <split size="1002"/>
                <dock id="" activePageId="Properties.1">
                    <page id="Properties.1"/>
                </dock>
            </splitter>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name /Users/madshagbarth/Downloads/Weave_Rewrite_v04.nk
 frame 39
 last_frame 200
 lock_range true
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
 colorManagement Nuke
 workingSpaceLUT linear
 monitorLut sRGB
 int8Lut sRGB
 int16Lut sRGB
 logLut Cineon
 floatLut linear
}
BackdropNode {
 inputs 0
 name BackdropNode1
 tile_color 0x7171c600
 label "Collision Object"
 note_font_size 42
 xpos -212
 ypos -243
 bdwidth 279
 bdheight 264
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x71c67100
 label "SpotFlare v1.0"
 note_font_size 30
 xpos 687
 ypos -132
 bdwidth 197
 bdheight 136
}
BackdropNode {
 inputs 0
 name BackdropNode3
 tile_color 0x388e8e00
 label "Velocity Field"
 note_font_size 42
 xpos 201
 ypos -428
 bdwidth 306
 bdheight 246
}
BackdropNode {
 inputs 0
 name BackdropNode4
 tile_color 0x7171c600
 label "Spawn Object"
 note_font_size 42
 xpos 647
 ypos -413
 bdwidth 190
 bdheight 158
}
StickyNote {
 inputs 0
 name StickyNote2
 label "Rotate by 90 degrees."
 xpos 364
 ypos -270
}
StickyNote {
 inputs 0
 name StickyNote1
 label "Calculate Normals (Sobel)"
 xpos 366
 ypos -349
}
StickyNote {
 inputs 0
 name StickyNote3
 label "Calculate Normals (Sobel)"
 xpos -112
 ypos -65
}
Group {
 inputs 0
 name Spot_Flare
 tile_color 0x2f66ff
 xpos 757
 ypos -113
 addUserKnob {20 User}
 addUserKnob {26 Headline l "" +STARTLINE T "<font color=#80dddd size=\"7\">S</font><font color=#90dede size=\"7\">p</font><font color=#a0dfdf size=\"7\">o</font><font color=#b0e0e0 size=\"7\">t</font><font color=#c0e1e1 size=\"7\">F</font><font color=#b0e0e0 size=\"7\">l</font><font color=#a0dfdf size=\"7\">are</font><font color=#90dede size=\"3\">v</font><font color=#80dddd size=\"2\">1.0</font>"}
 addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#80dddd size=\"2\">by Mads Hagbarth Lund</font>"}
 addUserKnob {26 devider001 l "<b><font color=#70EE70>General</font><b>"}
 addUserKnob {12 Position}
 Position {1874 8}
 addUserKnob {7 Gain}
 Gain 0.83
 addUserKnob {7 Gamma R 0 5}
 Gamma 2.04
 addUserKnob {7 Scale}
 Scale 0.265
 addUserKnob {6 SoftClip t "By default, spotflare will be very bright at the center. Use softclip to limit the maximum brightness." +STARTLINE}
 addUserKnob {7 softclipmax l max -STARTLINE R 1 100}
 softclipmax 10
 addUserKnob {6 glow_enable l Glow +STARTLINE}
 glow_enable true
 addUserKnob {6 EffectOnly l "Effect Only" +STARTLINE}
 EffectOnly true
 addUserKnob {22 FixJitter l "Fix Jitter" t "This does nothing... yet still fixes the bug with the expression node not updating its cashe from time to time.\nPlease fix The Foundry!" +STARTLINE}
 addUserKnob {26 devider02 l "<b><font color=#70EE70>Color</font><b>"}
 addUserKnob {18 GainTint}
 GainTint {0.482419 0.596129 1}
 addUserKnob {6 GainTint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 GainTint_panelDropped true
 addUserKnob {18 GammaTint}
 GammaTint {0.605052 1 0.545525}
 addUserKnob {6 GammaTint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 GammaTint_panelDropped true
 addUserKnob {26 devide01 l "" +STARTLINE T " "}
 addUserKnob {22 Reset l "Reset Color" T "nuke.thisNode().knob(\"GainTint\").setValue(1,0)\nnuke.thisNode().knob(\"GainTint\").setValue(1,1)\nnuke.thisNode().knob(\"GainTint\").setValue(1,2)\nnuke.thisNode().knob(\"GainTint\").setValue(1,3)\nnuke.thisNode().knob(\"GammaTint\").setValue(1,0)\nnuke.thisNode().knob(\"GammaTint\").setValue(1,1)\nnuke.thisNode().knob(\"GammaTint\").setValue(1,2)\nnuke.thisNode().knob(\"GammaTint\").setValue(1,3)" +STARTLINE}
 addUserKnob {26 DeviderShimmer l "<b><font color=#70EE70>Shimmer</font><b>"}
 addUserKnob {6 shimmer_enable l Shimmer +STARTLINE}
 addUserKnob {7 lacunarity l Detail R 0 5}
 lacunarity 3.5
 addUserKnob {7 noise_gain l Gain}
 noise_gain 1
 addUserKnob {7 Speed}
 Speed 0.76
 addUserKnob {7 Noise_Gang l "Time Offset" R 0 1000}
 Noise_Gang 240
 addUserKnob {26 devider04 l "<b><font color=#70EE70>Masking</font><b>"}
 addUserKnob {6 Mask +STARTLINE}
 addUserKnob {7 MaskRotation l "Mask Rotation"}
 MaskRotation 0.31
 addUserKnob {7 MaskGain l "Mask Gain"}
 MaskGain 0.4
 addUserKnob {7 MaskSoftness R 0 10}
 MaskSoftness 2.35
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x7171c600
  label Spike
  note_font_size 42
  xpos -222
  ypos 207
  bdwidth 270
  bdheight 257
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x388e8e00
  label Glow
  note_font_size 42
  xpos -597
  ypos 209
  bdwidth 280
  bdheight 258
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x8e388e00
  label Glare
  note_font_size 42
  xpos -1156
  ypos 207
  bdwidth 468
  bdheight 298
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0xffffffff
  gl_color 0xff
  label "WELCOME TO SPOTFLARE"
  note_font_size 42
  xpos -904
  ypos -206
  bdwidth 523
  bdheight 138
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x71c67100
  label "Spot Facing"
  note_font_size 42
  xpos -1463
  ypos 208
  bdwidth 252
  bdheight 258
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0xff
  label "PLEASE ENJOY"
  note_font_size 42
  xpos -801
  ypos 896
  bdwidth 333
  bdheight 160
 }
 StickyNote {
  inputs 0
  name StickyNote2
  label "This is a super inefficient way\nto avoid the 1-0 seam and\na major performence hit.\nIf anyone have a better solution,\nplease mail me! =)"
  note_font_size 8
  xpos -1045
  ypos 350
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0xcc0000ff
  gl_color 0xcc0000ff
  label "not yet implamented"
  xpos -222
  ypos 206
 }
 Dot {
  inputs 0
  name Dot19
  tile_color 0xff0000ff
  xpos -674
  ypos -127
  hide_input true
 }
 Dot {
  inputs 0
  name Dot20
  tile_color 0xffff00ff
  xpos -658
  ypos -127
  hide_input true
 }
 Dot {
  inputs 0
  name Dot21
  tile_color 0xff00ff
  xpos -641
  ypos -127
  hide_input true
 }
 Dot {
  inputs 0
  name Dot22
  tile_color 0xffffff
  xpos -624
  ypos -127
  hide_input true
 }
 Dot {
  inputs 0
  name Dot23
  tile_color 0xffff
  xpos -607
  ypos -127
  hide_input true
 }
 Input {
  inputs 0
  name Input1
  xpos -674
  ypos -106
 }
 Dot {
  name Dot13
  xpos -640
  ypos -25
 }
 Crop {
  box {0 0 1920 2}
  name Crop1
  selected true
  xpos -674
  ypos -7
 }
set N11af1de0 [stack 0]
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle3
  xpos -674
  ypos 35
 }
 Dot {
  name Dot1
  xpos -640
  ypos 131
 }
set N11ad1b40 [stack 0]
 Dot {
  name Dot9
  xpos -456
  ypos 131
 }
set N11ad98c0 [stack 0]
 Dot {
  name Dot2
  xpos -61
  ypos 131
 }
 Expression {
  expr0 "(atan(x-parent.Position.x,-y--parent.Position.y)+ (pi))/(pi*2)"
  name Expression8
  xpos -95
  ypos 268
 }
 Expression {
  expr0 sin(r*(16*pi))
  name Expression14
  xpos -95
  ypos 310
 }
 Grade {
  white 0.89
  gamma 0.2
  name Grade6
  xpos -95
  ypos 352
 }
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle2
  xpos -95
  ypos 396
 }
push $N11ad98c0
 Expression {
  temp_name0 xd
  temp_expr0 parent.Position.x-x
  temp_name1 yd
  temp_expr1 parent.Position.y-y
  temp_name2 dist
  temp_expr2 "sqrt(xd*xd + yd*yd)"
  temp_name3 scale
  temp_expr3 "dist / ((parent.Scale*1))"
  expr0 scale
  channel1 {-rgba.red -rgba.green -rgba.blue none}
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  channel3 {none none none -rgba.alpha}
  enable_mix_luminance false
  name distance
  xpos -490
  ypos 262
 }
 Grade {
  white {{pow(1-parent.Gain,4)}}
  gamma {{pow2(parent.Gamma)}}
  name Grade16
  xpos -490
  ypos 299
 }
 Expression {
  temp_name3 invsqr
  temp_expr3 isnan(r)?0:1/(r*r)
  expr0 invsqr
  expr1 invsqr
  expr2 invsqr
  name Inverse_Square
  xpos -490
  ypos 323
 }
 Grade {
  white {{parent.GainTint.r} {parent.GainTint.g} {parent.GainTint.b} 1}
  white_panelDropped true
  multiply {1 1 1 1}
  multiply_panelDropped true
  gamma {{parent.GammaTint} {parent.GammaTint} {parent.GammaTint} 1}
  name Grade2
  xpos -490
  ypos 387
 }
 Clamp {
  maximum 59999
  MinClampTo_enable true
  MaxClampTo {{maximum}}
  MaxClampTo_enable true
  name Clamp_Superbrights
  xpos -490
  ypos 430
 }
set N23b28770 [stack 0]
 Merge2 {
  inputs 2
  operation multiply
  name Merge3
  xpos -95
  ypos 434
 }
 Dot {
  name Dot3
  xpos -61
  ypos 708
 }
 Dot {
  name Dot15
  xpos -572
  ypos 708
 }
push $N11ad1b40
 Dot {
  name Dot16
  xpos -750
  ypos 131
 }
set N23b39330 [stack 0]
 Dot {
  name Dot17
  xpos -868
  ypos 131
 }
 Dot {
  name Dot7
  xpos -1332
  ypos 131
 }
 Expression {
  temp_name0 theta
  temp_expr0 pi*(parent.MaskRotation*2)
  temp_name1 px
  temp_expr1 "cos(theta) * (x-parent.Position.x) - sin(theta) * (y-parent.Position.y) + parent.Position.x"
  temp_name2 py
  temp_expr2 "sin(theta) * (x-parent.Position.x) + cos(theta) * (y-parent.Position.y) + parent.Position.y"
  temp_name3 val
  temp_expr3 "(atan(px-parent.Position.x,-py--parent.Position.y)+ pi)/+ (pi*2)"
  expr0 "smoothstep(0,1, sin(val*pi))"
  name Expression1
  xpos -1366
  ypos 298
 }
 Grade {
  black 0.033
  white {{(pow(parent.MaskGain,2)*10)+0.0001}}
  gamma {{(pow(parent.MaskSoftness,2)/2)+0.15}}
  name Grade9
  xpos -1366
  ypos 336
 }
 Expression {
  expr0 max(0,1-r)
  expr1 max(0,1-r)
  expr2 max(0,1-r)
  name Expression17
  xpos -1366
  ypos 380
 }
 Dot {
  name Dot8
  xpos -1332
  ypos 745
 }
push $N23b39330
 Dot {
  name Dot4
  xpos -750
  ypos 230
 }
set N23b55680 [stack 0]
 Dot {
  name Dot5
  xpos -868
  ypos 230
 }
 Expression {
  expr0 "(atan(x-parent.Position.x,-y--parent.Position.y)+ pi)/+ (pi*2)"
  name inversefacing
  xpos -902
  ypos 267
 }
set N23b5a260 [stack 0]
 Dot {
  name Dot18
  xpos -978
  ypos 270
 }
 Expression {
  expr0 pow(sin(r*pi),16)
  name reduction
  xpos -1012
  ypos 313
 }
set N23b62d40 [stack 0]
 Dot {
  name Dot10
  xpos -978
  ypos 415
 }
push $N23b62d40
push $N23b5a260
 ShuffleCopy {
  inputs 2
  green red
  alpha alpha2
  name ShuffleCopy1
  xpos -902
  ypos 313
 }
 Expression {
  temp_name0 octaves
  temp_expr0 5
  temp_name1 lacunarity
  temp_expr1 parent.lacunarity
  temp_name2 gain
  temp_expr2 parent.noise_gain
  temp_name3 Noise
  temp_expr3 g>0.0001?fBm(r,1,1+((frame+parent.Noise_Gang)/((1.0001-parent.Speed)*10000)),octaves,lacunarity,gain):0
  expr0 Noise
  expr1 Noise
  expr2 Noise
  name noise_top
  xpos -902
  ypos 348
 }
 Grade {
  black 0.54
  gamma 0.585
  black_clamp false
  name Grade14
  xpos -902
  ypos 388
 }
push $N23b55680
 Expression {
  temp_name0 xd
  temp_expr0 parent.Position.x-x
  temp_name1 yd
  temp_expr1 parent.Position.y-y
  temp_name2 dist
  temp_expr2 "sqrt(xd*xd + yd*yd)"
  expr0 "(atan(x-parent.Position.x,y-parent.Position.y)+ pi)/+ (pi*2)"
  expr1 dist/width
  name facing
  xpos -784
  ypos 267
 }
 Expression {
  temp_name0 octaves
  temp_expr0 5
  temp_name1 lacunarity
  temp_expr1 parent.lacunarity
  temp_name2 gain
  temp_expr2 parent.noise_gain
  temp_name3 Noise
  temp_expr3 fBm(r,1,1+((frame+8+parent.Noise_Gang)/((1.0001-parent.Speed)*10000)),octaves,lacunarity,gain)
  expr0 Noise
  expr1 Noise
  expr2 Noise
  name noise
  xpos -784
  ypos 314
 }
 Grade {
  black 0.54
  gamma 0.585
  black_clamp false
  name Grade15
  xpos -784
  ypos 412
 }
 Merge2 {
  inputs 2+1
  operation copy
  maskChannelMask rgba.red
  name FixSeam
  xpos -902
  ypos 412
 }
push $N23b28770
 Merge2 {
  inputs 2
  operation multiply
  name Merge1
  xpos -902
  ypos 436
 }
 Clamp {
  maximum_enable false
  name Clamp_Negative_Numbers
  xpos -902
  ypos 460
 }
 Dot {
  name Dot6
  xpos -868
  ypos 660
 }
push $N23b28770
 Dot {
  name Dot11
  xpos -456
  ypos 587
 }
push $N11ad1b40
 Merge2 {
  inputs 2
  operation plus
  name Merge6
  xpos -674
  ypos 584
  disable {{1-parent.glow_enable}}
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos -674
  ypos 657
  disable {{1-parent.shimmer_enable x2012 1}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge5
  xpos -674
  ypos 742
  disable {{1-parent.Mask}}
 }
 SoftClip {
  conversion "preserve hue and saturation"
  softclip_min 1
  softclip_max {{parent.softclipmax}}
  name SoftClip1
  xpos -674
  ypos 766
  disable {{1-parent.SoftClip}}
 }
push $N11af1de0
 Dot {
  name Dot12
  xpos -689
  ypos -25
 }
 Grade {
  multiply 0
  black_clamp false
  enable_mix_luminance false
  name Grade1
  xpos -723
  ypos 77
  disable {{1-parent.EffectOnly}}
 }
 Dot {
  name Dot14
  xpos -692
  ypos 794
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge7
  xpos -674
  ypos 791
 }
 Output {
  name Output1
  xpos -674
  ypos 991
 }
end_group
Crop {
 box {0 0 1880 1556}
 name Crop2
 label "(crop the edge off to make it sharper)"
 xpos 757
 ypos -89
}
Transform {
 translate {{curve x1 -1873 x100 0} 0}
 center {960 540}
 name Transform1
 label "(Animate it....)"
 xpos 757
 ypos -57
}
Crop {
 box {0 0 1920 1080}
 name Crop1
 xpos 757
 ypos -25
}
Noise {
 inputs 0
 output {rgba.red rgba.green -rgba.blue rgba.alpha}
 size 460
 zoffset 2.3
 lacunarity 1
 gain 0.44
 gamma 0.775
 center {1024 778}
 name Noise3
 xpos 271
 ypos -488
}
Matrix {
 channels {rgba.red -rgba.green -rgba.blue none}
 matrix {
     {1 0 -1}
     {2 0 -2}
     {1 0 -1}
   }
 name Matrix3
 xpos 271
 ypos -359
}
Matrix {
 channels {-rgba.red rgba.green -rgba.blue none}
 matrix {
     {-1 -2 -1}
     {0 0 0}
     {1 2 1}
   }
 name Matrix4
 xpos 271
 ypos -335
}
ColorMatrix {
 matrix {
     {-4.371138829e-08 -1 0}
     {1 -4.371138829e-08 0}
     {0 0 1}
   }
 name ColorMatrix1
 xpos 271
 ypos -266
}
Grade {
 white 3.7
 black_clamp false
 name Grade2
 xpos 271
 ypos -123
 disable true
}
Text2 {
 inputs 0
 font_size_toolbar 100
 font_width_toolbar 100
 font_height_toolbar 100
 message LP
 old_message {{76 80}
   }
 box {733 335.5 851 436.5}
 transforms {{0 2}
   }
 cursor_position 2
 scale {1 1}
 center {1024 1024}
 cursor_initialised true
 initial_cursor_position {{733 436.5}
   }
 group_animations {{0} imported: 0 selected: 0 items: "root transform/"}
 animation_layers {{1 11 1024 1024 0 0 1 1 0 0 0 0}
   }
 name Text5
 xpos -202
 ypos -319
}
Reformat {
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 name Reformat3
 xpos -202
 ypos -286
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle1
 xpos -202
 ypos -192
}
Dot {
 name Dot2
 xpos -168
 ypos -151
}
Blur {
 size 1.3
 name Blur1
 xpos -202
 ypos -119
}
Matrix {
 channels {rgba.red -rgba.green -rgba.blue none}
 matrix {
     {1 0 -1}
     {2 0 -2}
     {1 0 -1}
   }
 name Matrix1
 xpos -202
 ypos -87
}
Matrix {
 channels {-rgba.red rgba.green -rgba.blue none}
 matrix {
     {-1 -2 -1}
     {0 0 0}
     {1 2 1}
   }
 name Matrix2
 xpos -202
 ypos -57
}
Expression {
 temp_name3 Length
 temp_expr3 sqrt(Red*Red+Green*Green+Blue*Blue)+0.000000001
 expr0 Red/Length
 expr1 Green/Length
 expr2 Blue/Length
 name Normalize_Vector
 xpos -202
 ypos -9
}
Expression {
 inputs 0
 temp_name0 size
 temp_expr0 2
 expr0 fmod(x,size)==0?fmod(y,size)==0?1:0:0
 expr1 fmod(x,size)==0?fmod(y,size)==0?1:0:0
 expr2 fmod(x,size)==0?fmod(y,size)==0?1:0:0
 expr3 fmod(x,size)==0?fmod(y,size)==0?1:0:0
 name Expression1
 xpos 679
 ypos -351
}
Text2 {
 inputs 0
 font_size_toolbar 100
 font_width_toolbar 100
 font_height_toolbar 100
 message example
 old_message {{101 120 97 109 112 108 101}
   }
 box {585 364.5 970 465.5}
 transforms {{0 2}
   }
 cursor_position 7
 scale {1 1}
 cursor_initialised true
 initial_cursor_position {{585 465.5}
   }
 group_animations {{0} imported: 0 selected: items: "root transform/"}
 animation_layers {{1 11 1024 1024 0 0 1 1 0 0 0 0}
   }
 name Text4
 xpos 778
 ypos -304
}
Merge2 {
 inputs 2
 operation multiply
 name Merge1
 xpos 679
 ypos -304
}
Reformat {
 name Reformat5
 xpos 679
 ypos -201
}
set N23f34750 [stack 0]
BlinkScript {
 inputs 4
 recompileCount 4
 ProgramGroup 1
 KernelDescription "2 \"PointRender3D\" iterate pixelWise c2f2ba62dd8356e6026ad5d91985d79156dee8260b7bbd0c2bc6b1e6298d965f 5 \"src\" Read Random \"collision_map\" Read Random \"velocity_map\" Read Random \"texture_map\" Read Random \"dst\" Write Random 8 \"_alphaMultiplier\" Float 1 AAAAAA== \"_noiseScale\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"_resolution\" Int 2 AAAAAAAAAAA= \"magnitude\" Float 1 AAAAAA== \"_sampleCount\" Int 1 AAAAAA== \"_drag\" Float 1 AAAAAA== \"enableCollision\" Bool 1 AA== \"enableTexSampler\" Bool 1 AA== 8 \"_alphaMultiplier\" 1 1 \"_noiseScale\" 3 1 \"_resolution\" 2 1 \"magnitude\" 1 1 \"_sampleCount\" 1 1 \"_drag\" 1 1 \"enableCollision\" 1 1 \"enableTexSampler\" 1 1 0"
 kernelSource "//=========================\n//Frac\n//=========================\ninline float Frac(float a_X)\n\{\n    return a_X-floor(a_X);\n\}\n\n//New noise algorithm\nfloat hash( float n ) \{ return Frac(sin(n)*753.5453123f); \}\n\n//=========================\n//Cross\n//=========================\ninline float3 Cross(float3 A,float3 B)\n\{\n    return float3(A.y*B.z - A.z*B.y,A.z*B.x - A.x*B.z,A.x*B.y - A.y*B.x);\n\}\n\n//=========================\n//Fmax\n//=========================\ninline float Fmax(float a_X,float b_X,float c_X)\n\{\n    return max(c_X,max(a_X,b_X));\n\}\ninline float Fmin(float a_X,float b_X,float c_X)\n\{\n    return min(c_X,min(a_X,b_X));\n\}                                                                                                   \n\n//=========================\n//cheap_noise\n//=========================\ninline float cheap_noise( float x ,float y, float z )\n\{\n    float3 p = floor(float3(x,y,z));\n    float3 f = float3(Frac(x),Frac(y),Frac(z));\n    f = f*f*(3.0f-2.0f*f);\n    \n    float n = p.x + p.y*157.0f + 113.0f*p.z;\n    return _fc_lerp(_fc_lerp(_fc_lerp( hash(n+  0.0f), hash(n+  1.0f),f.x),\n                   _fc_lerp( hash(n+157.0f), hash(n+158.0f),f.x),f.y),\n               _fc_lerp(_fc_lerp( hash(n+113.0f), hash(n+114.0f),f.x),\n                   _fc_lerp( hash(n+270.0f), hash(n+271.0f),f.x),f.y),f.z);\n\}\n\n//=========================\n//mix (float3 and float version)\n//=========================\ninline float3 mix(float3 _X,float3 _Y,float _A)\{\n  return _X*(1.0f-_A)+_Y*_A;\n\}\ninline float mix(float _X,float _Y,float _A)\{\n  return _X*(1.0f-_A)+_Y*_A;\n\}\n\n//=========================\n//fast noise\n//=========================\ninline float noise(float _posx,float _posy)\{\n  return cheap_noise(_posx,_posy,0.0f);\n\}\n\n\nkernel PointRender3D : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;     //The texture map\n  Image<eRead, eAccessRandom, eEdgeClamped> collision_map;     //The texture map \n  Image<eRead, eAccessRandom, eEdgeClamped> velocity_map;     //The texture map \n  Image<eRead, eAccessRandom, eEdgeClamped> texture_map;     //The texture map \n  Image<eWrite, eAccessRandom> dst;                 //the output image\n\n\n  param:\n      float _alphaMultiplier; //Additive multiplier\n      float3 _noiseScale;     //Scale of the random velocities\n      int2 _resolution;       //Noise resolution\n      float magnitude;        //Magnitude of the initial velocity\n      int _sampleCount;       //Number of samples (the more, the longer the streaks)\n      float _drag;            //Drag coeficient\n      bool enableCollision;   //Toggle for drag\n      bool enableTexSampler;  //Toggle for texture sampling\n\n//------------------------------\n//-------DRAW FUNCTIONS---------\n//------------------------------\n//=========================\n//writepixel, used for writing pixels =)\n//=========================\n  void writepixel(float posx,float posy, float4 color,int index,float weight=1.0f)\n  \{ \n      float4 finalOutput; //This is used to store the final output\n      float4 dstSample; //This is used to store a sample of the destination\n      if ( dst.bounds.inside( posx, posy ) ) \{ //Test if the pixel written to is inside the output image. \n          dstSample = (float4)dst(posx,posy); //Sample the destination image\n          finalOutput = dstSample + (color*_alphaMultiplier*weight);\n          finalOutput.w = dstSample.w + ((color.w*_alphaMultiplier*weight));\n          dst(posx,posy) = finalOutput;\n        \}\n  \}\n\n//=========================\n//bilinear_Plot (draw to the dst x and y float coords using bilinear interpolation)\n//=========================\n  void bilinear_Plot(float2 temppos,float4 color,int index)\n  \{\n    float2 p;\n    p.x=Frac(temppos.x);\n    p.y=Frac(temppos.y);\n    float weights\[] = \{(1.0f-p.x)*(1.0f-p.y), p.x*(1.0f-p.y), (1.0f-p.x)*p.y, p.x*p.y\};\n    int2 _position = int2(floor(temppos.x)-0,floor(temppos.y)-0); \n    writepixel(_position.x,_position.y,color,index,weights\[0]);\n    writepixel(_position.x+1,_position.y,color,index,weights\[1]);\n    writepixel(_position.x,_position.y+1,color,index,weights\[2]);\n    writepixel(_position.x+1,_position.y+1,color,index,weights\[3]);\n  \}\n\n\n//=========================\n//process (main process function)\n//=========================\n  void process(int2 pos) \{\n    float2 posf = float2(pos.x,pos.y); //Float version of the pos variable\n    float4 sourceSample = src(pos.x,pos.y); //Lets not sample the source more than once.\n    if (sourceSample.w>0)\{ //No need to process if the alpha is Zero\n      int2 texsampcoord;\n      float2 velocity;\n      float2 position = posf;\n      float4 colisionSample = float4(0.0f);\n      float4 velocitySample = float4(0.0f);\n      float2 position_last = posf;\n      float4 color = 1.0f;\n      float lasstcol = 1.0f;\n      float totalMagnitude = 0.0f;\n\n      //Sample some noise to get a random initial velocity\n      float2 random2 = float2(noise(posf.x*_noiseScale.x,posf.y*_noiseScale.y),noise(posf.x+100*_noiseScale.x,posf.y*_noiseScale.y));\n      //Map it between -1 and 1\n      random2 = random2*2.0-1.0f;\n      //set the initial velocity\n      velocity = random2*magnitude;\n\n      for( int step = 0; step < min(int(_sampleCount*sourceSample.w),_sampleCount); step = step + 1 )\n      \{\n        //Evolve position...\n        position_last = position;\n        position += velocity;\n\n        if (enableCollision)\{ //Don't sample collision if we don't need it.\n          colisionSample = collision_map(position.x,position.y);\n        \}\n        // Do a new velocity sample\n        velocitySample = velocity_map(position.x,position.y);\n        \n        //Apply Drag\n        velocity *= _drag;\n\n        //Apply velocty\n        velocity += float2(velocitySample.x,velocitySample.y);\n\n        //If there is no collision sample at this area \n        // there is no need to do the following\n        if (colisionSample.w > 0.0f)\{\n          velocity = float2(colisionSample.x,colisionSample.y)*length(velocity);\n          position = position_last + velocity;\n        \}\n        \n        //Apply the new velocity to the total magnitude\n        totalMagnitude = totalMagnitude + length(velocity);\n\n        int stepper = min(int(_sampleCount*sourceSample.w),_sampleCount);\n\n        //Get the coord that we want to sample from the input texture map.\n        texsampcoord.x = int((float(step)/float(stepper) )*_resolution.x);\n        if (enableTexSampler) \{\n          color = texture_map(texsampcoord.x,1);\n        \}\n        else \{\n          color = sourceSample;\n        \}\n\n        //Plot the output using biliniear interpolation.\n        bilinear_Plot(position,color,1);\n\n      \}\n\n    \}\n\n  \} //----> process\n\};"
 useGPUIfAvailable false
 rebuild ""
 PointRender3D__alphaMultiplier 0.1
 PointRender3D__noiseScale {6 {PointRender3D__noiseScale.x} {PointRender3D__noiseScale.x}}
 PointRender3D__resolution {2500 2500}
 PointRender3D_magnitude 5
 PointRender3D__sampleCount 1000
 PointRender3D__drag 0.982
 PointRender3D_enableTexSampler true
 rebuild_finalise ""
 maxGPUMemory 100
 name BlinkScript2
 xpos 271
 ypos -13
}
set N23f3b490 [stack 0]
push $N23f34750
Merge2 {
 inputs 2
 name Merge2
 xpos 300
 ypos 94
}
push $N23f3b490
Viewer {
 frame 39
 frame_range 1-200
 name Viewer1
 selected true
 xpos 59
 ypos 111
}
